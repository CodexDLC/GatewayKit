# scripts/generate_schemas.py
import json
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π
# –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–∫—Ä–∏–ø—Ç—É –Ω–∞—Ö–æ–¥–∏—Ç—å –ø–∞–ø–∫–∏ 'apps' –∏ 'libs'
ROOT_DIR = Path(__file__).resolve().parent.parent
sys.path.append(str(ROOT_DIR))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω—ã —Å—Ö–µ–º—ã
from apps.gateway.rest.auth.dto import (  # noqa: E402
    ApiLoginResponse,
    ApiRegisterResponse,
    ApiValidateResponse,
)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å—Ö–µ–º—ã
SCHEMAS_DIR = ROOT_DIR / "libs/domain/schemas/v1"
MODELS_TO_GENERATE = {
    "auth_login_response.v1.json": ApiLoginResponse,
    "auth_register_response.v1.json": ApiRegisterResponse,
    "auth_validate_response.v1.json": ApiValidateResponse,
}


def generate_schemas():
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç JSON-—Å—Ö–µ–º—ã –¥–ª—è Pydantic-–º–æ–¥–µ–ª–µ–π.
    """
    print(f"üìÅ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ö–µ–º—ã –≤: {SCHEMAS_DIR}")
    SCHEMAS_DIR.mkdir(parents=True, exist_ok=True)

    for filename, model in MODELS_TO_GENERATE.items():
        schema_path = SCHEMAS_DIR / filename
        print(f"  -> –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º {filename}...")

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ö–µ–º—É –∏–∑ –º–æ–¥–µ–ª–∏
        schema_content = model.model_json_schema()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        with open(schema_path, "w", encoding="utf-8") as f:
            json.dump(schema_content, f, ensure_ascii=False, indent=2)
            f.write("\n")  # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–Ω—Ü–µ —Ñ–∞–π–ª–∞

    print("‚úÖ –í—Å–µ —Å—Ö–µ–º—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!")


if __name__ == "__main__":
    generate_schemas()
